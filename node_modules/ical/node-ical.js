var ical = require('./ical')
  , request = require('request')
  , fs = require('fs');
var zlib = require('zlib');
var stream = require('stream');
//


var headers = {
  'Accept-Encoding': 'gzip'
};

//
exports.fromURL = function(url, opts, cb){
  if (!cb)
    return;

  //Converter for Stream to String
  var converter = new stream.Writable();
  converter.data = "";
  converter._write = function (chunk) {
    this.data += chunk;
    //TODO cb should be in "end" Event not here...but it works...
    cb(undefined,opts,ical.parseICS(this.data));
  };

  //URL request
  var response = request({uri:url,'headers':headers});

  //TODO: Doesnt work ??? Never got a "end" Event
  converter.on('end', function() {
    console.log("end event:");
  });

  response.on('response', function (response) {
    // decode the stream if necessary
    if (response.headers['content-encoding'] === 'gzip')
      response = response.pipe(zlib.createGunzip());
    // Stream to String and cb
    response.pipe(converter);
  });

}

exports.parseFile = function(filename){
  return ical.parseICS(fs.readFileSync(filename, 'utf8'))
}


var rrule = require('rrule').RRule

ical.objectHandlers['RRULE'] = function(val, params, curr, stack, line){
  curr['rrule'] = rrule.fromString(line.replace("RRULE:", ""));
  return curr
}
